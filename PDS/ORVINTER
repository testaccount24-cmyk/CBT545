PORV     TITLE   'PL360 COMPILER ORVYL INTERFACE ROUTINE'
*"The source code for this computer program is placed in the public
* domain and may be used by any party without notice to the copyright
* holder, Stanford University. Stanford University provides no
* support of any kind to this computer program.  Further:
*
* STANFORD MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED.
* BY WAY OF EXAMPLE, BUT NOT LIMITATION, STANFORD MAKES NO
* REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY
* PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE WILL NOT INFRINGE
* ANY PATENTS, COPYRIGHTS, TRADEMARKS, OR OTHER RIGHTS. STANFORD SHALL
* NOT BE LIABLE FOR ANY LIABILITY OR DAMAGES WITH RESPECT TO ANY CLAIM
* BY A USER OF THIS COMPUTER PROGRAM OR ANY DERIVATIVES OF THIS
* COMPUTER PROGRAM."
         MACRO
&L       UCALL &NAME
&L       L     RETURN,=V(&NAME)
         BALR  RETURN,RETURN
         MEND
         MACRO
&L       UENTER
         ENTRY &L
&L       STM   R1,R0,0(R13)
         BALR  BASER,0
         USING *,BASER
         AL    R13,BUMP13
         MEND
         MACRO
&L       UEXIT &RST,&LTR
&L       SL    R13,BUMP13
         AIF   ('&RST' EQ '').MAX
         LM    R3,R0,8(R13)
         AGO   .NMAX
.MAX     LM    R1,R0,0(R13)
.NMAX    AIF   ('&LTR' EQ '').NLTR
         LTR   &LTR,&LTR
.NLTR    BR    RETURN
         EJECT
         MEND
         MACRO
&L       ABORT &CODE
&L       LA    R3,&CODE
         UCALL ABORT
         MEND
         SPACE
         LCLC  &TYPE
&TYPE    SETC  '1X8'
* THE ABOVE SYMBOL MAY BE SET TO:
* '67' FOR CAMPUS 360/67 SYSTEM
* 'ANYTHING'  FOR SLAC, 158, 168 SYSTEMS
         EJECT
PL360    CSECT
*
**REGISTER USAGE
*
R0       EQU   0                  LOCAL WORK ONLY..USED BY SVC
R1       EQU   1                  LOCAL WORK ONLY..USED BY SVC
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                  BASE TO HOUSE KEEPING BLOCK
R10      EQU   10                 LOCAL BASE REGISTER
R11      EQU   11                 USED IN UCALL THEN FREE
R12      EQU   12                 POINTER TO CURRENT ACTIVE SAVE AREA
R13      EQU   13                 POINTER TO NEXT FREE SAVE AREA
R14      EQU   14                 LOCAL WORK ONLY..USED BY SVC
R15      EQU   15                 LOCAL WORK ONLY..USED BY SVC
*
BASER    EQU   R10                LOCAL BASE REGISTER
RETURN   EQU   R14                LOCAL RETURN REGISTER
*
ZERO     EQU   R0
TIP      EQU   R1
PTR      EQU   R2
TEMP     EQU   R3
AL       EQU   R4
IL       EQU   R5
IL2      EQU   R6
X        EQU   R7
P        EQU   R8
FIP      EQU   R9
MEM      EQU   0
         AIF   ('&TYPE' NE '67').T1
LLEN     EQU   3                  WDS LINE LENGTH
ACCT     EQU   4
PREFIX   EQU   1
         AGO   .T2
.T1      ANOP
LLEN     EQU   4                  WDS LINE LENGTH
ACCT     EQU   6
PREFIX   EQU   4
.T2      ANOP
         EJECT
*
**GET ADDRESSABILITY
*
         BALR  BASER,R0           SET UP BASE REG
         USING *,BASER            TELL ASSEMBLER
         AIF   ('&TYPE' NE '67').T3
         L     R13,STACK
         SENSE 1
         LA    R1,0(R1,R15)
         AGO   .T4
.T3      ANOP
         SET   14,L:MINSPAC,0
         BZ    GOON
         PANIC 200
GOON     ST    R1,SAVE1
         LA    R2,72(,R1)
         ST    R2,STACK
         LR    R13,R2
         LA    R2,1024(,R1)
         ST    R2,WORKORG
         AR    R1,R0
.T4      ANOP
         S     R1,=F'14336'
         ST    R1,WORKEND
         ST    R1,COPBUF
         A     R1,=F'4096'
         ST    R1,LCPTR
         ST    R1,CBUF
         LA    R1,4080(R1)
         ST    R1,CBUFEND
         ST    R1,LBPTR
         ST    R1,LBUF
         LA    R1,3990(R1)
         ST    R1,LBUFEND
         LA    R1,2(R1)
         ST    R1,BUFLINE
         EJECT
*
**ATTACH THE TERMINAL
*
         ATTACH 1,0               ATTACH USERS TERMINAL
         BZ    ATTACH1            TEST ATTACH OF TERMINAL STARTED
         PANIC 201                BAD EXIT
         EXIT                    TO BLOCK "CONTINUE"
ATTACH1  ST    R0,TI              DROP TERMINAL IDENTIFIER INTO CORE
         WAIT  (0)                WAIT FOR ATTACH TO COMPLETE
         BZ    ATTACH2            TEST FOR GOOD ATTACH
         PANIC 202                BAD RETURN EXIT
         EXIT                    IN CASE OF "CONTINUE"
ATTACH2  EQU   *
*
**SET WYLBUR MODE WORD AND ESTABLISH MAGIC WORD TO READ WDS
*
FIXW0    CONTROL TI,12,0  NON-PREST FORMAT  ALL OTHER GO
         WAIT  (0)                WAIT FOR WORD TO BE SET
*
**SET TIMER INTERRUPT ENTRY
*
         L     R1,=V(TIMERINT)
         SET   5,(1)
*
**SET ATTENTION INTERRUPT ENTRY
*
         L     R1,=V(ATTENINT)
         SET   8,(1),L:TI
*
**ENABLE TIMER AND ATTN INTERRUPTS
*
         SET   11,X'C0'
*
**DISABLE ORVYL INTERVENTION ON ATTENTION
*
         CONTROL TI,22,(15)
         WAIT  (0)
         SYSQS R1,R2,'-WELCOME TO PL360'
         UCALL TPUT
         EJECT
*
*  TEST IF OBJECT DECK WANTED
*
         LA    R2,WOBJ
         UCALL YESTEST
         BZ    PRINTER
*
*  ATTACH THE FILE TO RECEIVE PUNCH OUTPUT
*
         UCALL ATCHFL
         MVC   OBJ(4),FILEDI
         SR    R14,R14
         L     R15,FILESZ
         D     R14,=F'80'
         M     R14,=F'80'
         ST    R15,OBJSZ
         A     R15,CBUF
         ST    R15,CBUFEND
         AIF   ('&TYPE' EQ '67').T5
         L     R15,=X'04000050'      LRECL=80
         CONTROL OBJ,14,(15),MODE=(FORMAT,WAIT)
         WAIT  (0)
.T5      ANOP
*
*  TEST IF PRINTER OUTPUT WANTED
*
PRINTER  LA    R2,WLIST
         UCALL YESTEST
         BZ    WYLBUR
*
*  ATTACH THE FILE TO RECEIVE PRINTER OUTPUT
*
         UCALL ATCHFL
         MVC   LINEP(4),FILEDI
         SR    R14,R14
         L     R15,FILESZ
         D     R14,=F'133'
         M     R14,=F'133'
         ST    R15,LINEPSZ
         A     R15,LBUF
         ST    R15,LBUFEND
         AIF   ('&TYPE' EQ '67').T6
         L     R15,=X'04000085'      LRECL=133
         CONTROL LINEP,14,(15),MODE=(FORMAT,WAIT)
         WAIT  (0)
.T6      ANOP
         EJECT
*
*  DETERMINE TYPE OF COMPILE
*
WYLBUR   LA    R1,INPUT
         LR    R2,R1
         UCALL TGET
         CLC   INPUT(7),=C'COMPILE'
         BE    COMPILE
         COMMAND 0,(R1),(R2),MODE=WYLBUR
         B     WYLBUR
COMPILE  EQU   *
         CLI   INPUT+8,C' '
         BNE   NOWILB
         MVI   WILBIN,X'FF'
         B     COMPILER
NOWILB   SYSQS R1,R2,'BEGIN TYPING PL360 PROGRAM'
         UCALL TPUT
COMPILER EQU   *
         EJECT
*
*  NOW CALL THE COMPILER
*
         L     R13,SAVE1
         L     R15,=V(SEGN001)
         BALR  14,15
         UCALL EXIT
         EXIT
MINSPAC  DC    A(14336+4096)
         LTORG
         EJECT
ATCHFL   UENTER
AT1      MVC   FILENAME(40),BLANKCS
         MVI   SCRFLAG,0
         LA    R2,WFILE
         LA    R1,INPUT
         UCALL TPROMPT
         LR    R6,R2
         LR    R15,R1
ATX1     CLI   0(R15),C' '
         BNE   ATX3
         C     R2,=F'4'
         BL    ATX4
         CLC   1(3,R15),=C'REP'
         BE    ATX2
         CLC   1(3,R15),=C'SCR'
         BE    ATX2
         CLC   1(3,R15),=C'ERA'
         BNE   ATX4
ATX2     MVI   SCRFLAG,1
         B     ATX4
ATX3     LA    R15,1(R15)
         BCT   R6,ATX1
ATX4     SR    R15,R1
         LR    R2,R15
         LR    R6,R15        SAVE LENGTH IN CASE ERASE IS NECESSARY
         BCTR  R2,0
         EX    R2,MOVENAME
AT0      ATTACH 2,(1),(15)
         BZ    AT2
         ABORT 8
AT2      WAIT  (0)
         BZ    ATCHFLX
         C     R15,=F'20'
         BNE   AT3
         CLI   SCRFLAG,0
         MVI   SCRFLAG,0
         BNE   ATX5
         LA    R2,SCROK
         UCALL YESTEST
         BZ    AT1
ATX5     LR    R15,R6
         ATTACH 2,FILENAME,(15),MODE=(OLD)
         BZ    AT6
         ABORT 8
AT6      WAIT  (0)
         BNZ   AT3
         CONTROL (0),8,(15)
         BZ    AT4
         ABORT 72
AT4      WAIT  (0)
         BZ    AT5
         ABORT 76
AT5      LR    R15,R6
         LA    R1,FILENAME
         B     AT0
AT3      ABORT 28
ATCHFLX  ST    R0,FILEDI
         LA    R3,2048
         CONTROL (0),23
         BNE   ATCHFX
         WAIT  (0)
         BNE   ATCHFX
         CR    R1,R3
         BNH   ATCHFX
         LR    R3,R1
ATCHFX   ST    R3,FILESZ
         UEXIT ,
MOVENAME MVC   FILENAME(1),0(R1)
WFILE    DC    F'11'
         DC    C'FILE NAME? '
WOBJ     DC    F'6'
         DC    C'DECK? '
WLIST    DC    F'9'
         DC    C'LISTING? '
SCRFLAG  DC    X'00'
SCROK    DC    F'9'
         DC    C'REPLACE? '
         DROP  BASER
         EJECT
         ENTRY SYSINIT
         USING SYSINIT,15
SYSINIT  STM   0,15,SAVE
         BALR  BASER,0
         USING *,BASER
         DROP  15
         L     R13,STACK
         SENSE 3
         SLL   R15,8
         ST    R15,PACKDATE
         OI    PACKDATE+3,X'0C'
         UNPK  INPUT(7),PACKDATE
         MVC   DATE+6(2),INPUT
         MVC   DATE+3(2),INPUT+4
         MVC   DATE+0(2),INPUT+2
         SR    R3,R3
         IC    R3,PACKDATE+1
         CH    R3,=H'9'
         BNH   S1
         SH    R3,=H'6'
S1       MH    R3,=H'3'
         LA    R3,CNVT-3(R3)
         SP    PACKDATE+1(3),0(3,3)
         CP    PACKDATE+1(3),=P'590'
         BNH   S3
         TM    PACKDATE,1
         BNZ   S2
         TM    PACKDATE,X'12'
         BNM   S3
S2       SP    PACKDATE+1(3),=P'10'
S3       UNPK  INPUT+2(5),PACKDATE+1(3)
         MVC   PACKDATE(2),INPUT
         MVC   PACKDATE+2(3),INPUT+3
         LA    R1,DATE
         L     R3,WORKORG
         L     R4,WORKEND
         LA    R15,255
         L     R0,SAVE
         L     R2,SAVE+8
         LM    R5,R14,SAVE+20
         BR    14
         DS    0F
DATE     DC    C'05/15/85  ORVYL '
PACKDATE DS    F
CNVT     DC    P'1000,1690,2400,3090,3790,4480'
         DC    P'5180,5870,6560,7260,7950,8650'
         DROP  BASER
         EJECT
         ENTRY SYSTERM
         USING SYSTERM,15
SYSTERM  STM   0,15,SAVE
         BALR  BASER,0
         DROP  15
         USING *,BASER
         L     R13,STACK
         L     R15,LCPTR
         L     R1,CBUF
         CR    R15,R1
         BE    STRM0
*
*  PUNCH END OF OBJECT MODULE
*
         SR    R15,R1
         L     R14,RECNO
         L     R0,OBJ
         L     R5,=V(FORCEDI)
         BALR  R5,R5
         WRITE (0),(1),(15),(14),MODE=WAIT
         WAIT  (0)
         BZ    STRM0
         ABORT 100
         UCALL EXIT
STRM0    L     R15,LBPTR
         L     R1,LBUF
         CR    R1,R15
         BE    STRM1
*
*  WRITE END OF LISTING
*
         SR    R15,R1
         L     R14,LRECNO
         L     R0,LINEP
         L     R5,=V(FORCEDI)
         BALR  R5,R5
         WRITE (0),(1),(15),(14),MODE=WAIT
         WAIT  (0)
         BZ    STRM1
         ABORT 100
STRM1    LA    R15,0
         LM    0,14,SAVE
         BR    14
         EJECT
YESTEST  UENTER
*  ON ENTRY, (R2)= @ PROMPT
*  IF THE USER RESPONSE IS "YES" THEN R1=1 ON RETURN,
*  ELSE IF "NO" THEN R1=0, ELSE NO RETURN.
*
         LA    R1,INPUT
YES0     UCALL TPROMPT
         C     2,=F'3'
         BNH   YES1
         LA    R2,3
YES1     BCTR  R2,0
         EX    R2,COMP1
         BE    YESOUT
         C     R2,=F'1'
         BNH   YES2
         LA    R2,1
YES2     EX    R2,COMP2
         BE    NOOUT
         EX    R2,COMP3
         BE    YESOUT
         LA    R1,INPUT
         LA    R2,YESORNO
         B     YES0
YESOUT   LA    R1,1
         B     YESXIT
NOOUT    LA    R1,0
         B     YESXIT
COMP1    CLC   0(0,1),=C'YES'
COMP2    CLC   0(0,1),=C'NO'
COMP3    CLC   0(0,1),=C'OK'
YESXIT   SL    R13,BUMP13
         LM    R2,R0,4(R13)
         LTR   R1,R1
         BR    RETURN
         DROP  BASER
YESORNO  DC    F'23'
         DC    C'PLEASE TYPE YES OR NO: '
         EJECT
EXIT     UENTER
         AIF   ('&TYPE' NE '67').T7
         SYSQS R1,R2,'CLEAR LOADS'
         COMMAND 0,(R1),(R2),MODE=WYLBUR
.T7      ANOP
         LA    R1,0
         C     R1,OBJ
         BE    XIT1
         DETACH OBJ
         WAIT  (0)
         LA    R1,0
XIT1     C     R1,LINEP
         BE    XIT2
         DETACH LINEP
         WAIT  (0)
XIT2     SYSQS R1,R2,'-LEAVING PL360'
         UCALL TPUT
         EXIT
         EJECT
         ENTRY PUNCH
         USING PUNCH,15
PUNCH    STM   0,15,SAVE
         BALR  BASER,0
         USING *,BASER
         DROP  15
         SR    R1,R1
         C     R1,OBJ
         BE    PUNCH3
         L     R13,STACK
         LR    R3,R0
         L     R2,LCPTR
         C     R2,CBUFEND
         BNE   PUNCH2
         L     R1,CBUF
         L     R14,RECNO
         L     R0,OBJ
         L     R5,=V(FORCEDI)
         BALR  R5,R5
         L     R15,OBJSZ
         WRITE (0),(1),(15),(14),MODE=WAIT
         WAIT  (0)
         BZ    PUNCH1
         ABORT 100
PUNCH1   L     R1,RECNO
         LA    R1,1(R1)
         ST    R1,RECNO
         L     R2,CBUF
         ST    R2,LCPTR
PUNCH2   MVC   0(80,R2),0(R3)
         L     R1,LCPTR
         LA    R1,80(R1)
         ST    R1,LCPTR
PUNCH3   LM    0,15,SAVE
         BR    14
OBJ      DC    F'0'
OBJSZ    DC    F'2048'
RECNO    DC    F'0'
         DROP  BASER
         EJECT
INTPUT   UENTER
         CLI   ATTNFG,X'FF'
         BNE   INTPUT1
         UCALL INTCHK
INTPUT1  CLI   NODIAG,X'FF'
         BE    INTPUTX
         UCALL TPUT
INTPUTX  UEXIT ,
INTCHK   UENTER
         MVI   NODIAG,X'FF'
         LA    R1,INPUT
         LA    R2,WDIAG
         UCALL YESTEST
         BE    INTCHKX
         MVI   NODIAG,X'00'
INTCHKX  SYSQS R1,R2,'COMPILATION CONTINUING..'
         UCALL TPUT
         UEXIT ,
         ENTRY WRITE
         USING WRITE,15
WRITE    STM   0,15,SAVE
         BALR  BASER,0
         USING *,BASER
         DROP  15
         L     R13,STACK
         LR    R3,R0
         LA    R1,0
         C     R1,LINEP
         BE    WRITE0
         L     R2,LBPTR
         C     R2,LBUFEND
         BNE   WTR1
         L     R1,LBUF
         L     R14,LRECNO
         L     R0,LINEP
         L     R5,=V(FORCEDI)
         BALR  R5,R5
         L     R15,LINEPSZ
         WRITE (0),(1),(15),(14),MODE=WAIT
         WAIT  (0)
         BZ    WTR2
         ABORT 100
WTR2     L     R1,LRECNO
         LA    R1,1(R1)
         ST    R1,LRECNO
         L     R2,LBUF
         ST    R2,LBPTR
WTR1     MVC   0(133,R2),0(R3)
         L     R1,LBPTR
         LA    R1,133(R1)
         ST    R1,LBPTR
WRITE0   CLC   28(8,R3),=C'SEGMENT '
         BNE   WRITE1
         LA    R1,28(,R3)
         LA    R2,61
         UCALL TPUT
         CLI   ATTNFG,X'FF'
         BNE   WRITEX
         UCALL INTCHK
         B     WRITEX
WRITE1   CLC   109(15,R3),STARS
         BNE   WRITE2
         CLI   NODIAG,X'FF'
         BE    WRITEX
         CLC   21(9,R3),=C'UNDEF LAB'
         BNE   WRITE1A
         LA    R1,1(R3)
         B     WRITE1B
WRITE1A  MVI   ERR2,X'FF'
         MVC   109(16,R3),12(R3)
         LA    R1,36(,R3)
WRITE1B  LA    R2,90
         UCALL INTPUT
         B     WRITEX
WRITE2   CLI   1(R3),C'0'
         BL    WRITEX
         CLI   ERR2,X'FF'
         BNE   WRITEX
         MVI   ERR2,X'00'
         LA    R1,36(,R3)
         LA    R2,85
         UCALL INTPUT
WRITEX   LM    0,15,SAVE
         BR    14
STARS    DC    16C'*'
ERR2     DC    X'00'
LINEP    DC    F'0'
LINEPSZ  DC    F'2048'
LRECNO   DC    F'0'
NODIAG   DC    X'00'
WDIAG    DC    F'42'
         DC    C'DO YOU WANT FURTHER ERROR MESSAGES TYPED? '
         DROP  BASER
         EJECT
         ENTRY FORCEDI
FORCEDI  STM   R1,R0,0(R13)
         BALR  BASER,0
         USING *,BASER
         AL    R13,BUMP13
         CONTROL (0),0,(14),MODE=WAIT
         BNZ   FRCERR
         WAIT  (0)
         BNZ   FRCERR
         CONTROL (0),7,(15)
         BNZ   FRCERR
         WAIT  (0)
         BNZ   FRCERR
         SL    R13,BUMP13
         LM    R1,R0,0(R13)
         BR    R5
FRCERR   ABORT 100
         DROP  BASER
         EJECT
         ENTRY READ
         USING READ,15
READ     STM   0,15,SAVE
         BALR  BASER,0
         DROP  15
         USING *,BASER
         L     R13,STACK
         LR    R3,R0
         CLI   ATTNFG,X'FF'
         BNE   READC
         UCALL INTCHK
READC    CLI   COPFLG,X'00'
         BE    READ0
         L     R4,COPBGN
         CL    R4,COPEND
         BL    READC3
         L     R14,COPREC
         L     R4,COPBUF
         L     R15,FILESZ
         READ  FILEDI,(4),(15),(14),MODE=WAIT
         WAIT  (0)
         BZ    READC2
READC1   DETACH FILEDI
         WAIT  (0)
         MVI   COPFLG,X'00'
         B     READ0
READC2   ST    R14,COPREC
         AR    R1,R4
         ST    R1,COPEND
READC3   MVC   INPUT(236),BLANKCS
         MVC   COPLIN+4-LLEN(LLEN),0(R4)
         L     R1,COPLIN
         CVD   R1,0(R13)
         MVC   INPUT+236(8),=X'202021204B202020'
         ED    INPUT+235(9),4(R13)
         LA    R5,INPUT+243
READC4   CLI   0(R5),C'0'
         BNE   READC5
         MVI   0(R5),C' '
         BCT   R5,READC4
READC5   SR    R5,R5
         LR    R1,R5
         IC    R5,LLEN(,R4)
         LA    R4,LLEN+1(,R4)
         LA    R6,INPUT
         LA    R7,236(,R6)
         MVC   72(8,R6),236(R6)
READC6   LTR   R5,R5
         BNH   READC8
         IC    R1,0(,R4)
         BCTR  R5,0
         LA    R4,1(,R4)
         LA    R8,15
         NR    R8,R1
         SRL   R1,4
         LA    R6,0(R1,R6)
         LTR   R8,R8
         BNH   READC7
         SR    R5,R8
         BCTR  R8,0
         EX    R8,MOVCD
         LA    R6,1(R8,R6)
         LA    R4,1(R8,R4)
READC7   CR    R6,R7
         BNH   READC6
         B     READC1
MOVCD    MVC   0(0,R6),0(R4)
READC8   ST    R4,COPBGN
         MVC   0(80,R3),INPUT
         B     READX
READ0    CLI   WILBIN,X'FF'
         BE    READ1
         LA    R1,INPUT
         LR    R2,R1
         UCALL TGET
         CLC   0(2,R1),=C'/*'
         BE    READ3
         MVC   0(80,R3),BLANKCS
         LR    R4,R1
         BCTR  R2,0
         EX    R2,MOVIN2
         B     READX
READ1    L     R4,NXTLINE
         C     R4,ENDLINE
         BL    READ2
         L     R1,BUFLINE
         ST    R1,NXTLINE
         READ  TI,(1),2048,LINES,MODE=TEXT
         WAIT  (0)
         BNZ   READ3
         L     R4,NXTLINE
         AR    R1,R4
         ST    R1,ENDLINE
READ2    LA    R2,80
         AR    R2,R4
         ST    R2,NXTLINE
         MVC   STARTL(4),=F'-1'
         MVC   0(80,R3),0(R4)
         CLI   0(R3),C'/'
         BNE   READX
         LM    0,15,SAVE
         BR    15
READ3    MVI   EOF,X'FF'
READX    CLI   EOF,X'00'
         LM    0,15,SAVE
         BR    14
         DROP  BASER
EOF      DC    X'00'
         EJECT
*
** ROUTINE TO PROCESS $COPY
*
         ENTRY COPY
         USING COPY,15
COPY     STM   0,15,SAVE
         BALR  BASER,0
         DROP  15
         USING *,BASER
         L     R13,STACK
         CLI   COPFLG,X'00'
         BE    COPY1
COPY0    SYSQS R1,R2,'$COPY NOT ALLOWED.'
         UCALL TPUT
         B     COPYX
COPY1    LR    R3,R0
         BCTR  R3,0
COPY2    CLI   1(R3),C' '
         BE    COPY3
         LA    R3,1(,R3)
         B     COPY2
COPY3    SR    R4,R4
         CLI   2(R3),C' '
         BE    COPY4
         LA    R4,2(,R3)
COPY4    CLI   0(R3),C')'
         BNE   COPY7
         BCTR  R3,0
         LR    R1,R3
COPY5    CR    R1,R0
         BNH   COPY0
         CLI   0(R1),C'('
         BE    COPY6
         BCT   R1,COPY5
COPY6    LA    R0,1(,R1)
COPY7    LR    R1,R0
         LA    R15,1(,R3)
         SR    R15,R1
         BNP   COPY0
         LTR   R4,R4
         BE    COPY8
         AIF   ('&TYPE' NE '67').T8
         MVI   INPUT,C'&'
         AGO   .T9
.T8      ANOP
         MVC   INPUT(PREFIX),=C'ORV.'
.T9      ANOP
         MVC   INPUT+PREFIX(ACCT),0(R4)
         MVI   INPUT+PREFIX+ACCT,C'.'
         EX    R15,MOVENM
         LA    R15,PREFIX+ACCT+1(,R15)
         LA    R1,INPUT
COPY8    ATTACH 2,(1),(15),MODE=(SHARE,OLD)
         BNZ   COPY0
         WAIT  (0)
         BNZ   COPY0
         ST    R0,FILEDI
         MVC   COPBGN(4),COPEND
         MVI   COPFLG,X'FF'
         ST    R15,COPREC
         LA    R3,2048
         CONTROL (0),23
         BNE   COPY9
         WAIT  (0)
         BNE   COPY9
         CR    R1,R3
         BNH   COPY9
         LR    R3,R1
COPY9    ST    R3,FILESZ
COPYX    LM    0,15,SAVE
         BR    14
MOVENM   MVC   INPUT+PREFIX+ACCT+1(0),0(R1)
         DROP  BASER
         EJECT
*
**ROUTINE TO WRITE MESSAGES TO TERMINAL
*
*ON ENTRY R1 CONTAINS ADDRESS OF MESSAGE TO BE WRITTEN
*         R2  CONTAINS LENGTH OF MESSAGE TO BE WRITTEN
*
TPUT     UENTER
TPUT1    WRITE TI,(R1),(R2)
         BZ    TPUT2              TEST FOR WRITE STARTED
         PANIC 203                IN TROUBLE EXIT
         EXIT                    IN CASE OF "CONTINUE"
TPUT2    WAIT  (0)                WAIT FOR GOOD COMPLETION
         BM    TPUT1              BACK FOR ANOTHER TRY IF NOT
         BNH   TPUTX              JUMP IF NO ATTENTION
         MVI   ATTNFG,X'FF'       SET ATTENTION FLAG
TPUTX    UEXIT ,                  RETURN TO CALLER
*
**SPECIAL PROMPT TERMINAL INPUT ROUTINE
*
*ON ENTRY R1 = @UPPER INPUT REGION.
*         R2 = @PROMPT.
*ON EXIT R1 = @UPPER INPUT REGION.
*        R2 = # OF CHARACTERS IN THE INPUT LINE.
*
TPROMPT  UENTER
         LR    R5,R2                    R5 := R2;
         LR    R2,R1                    R2 := R1;
         B     TGET0                     GOTO TGET0;
*
**TERMINAL INPUT ROUTINE
*
*ON ENTRY R1 = @UPPER INPUT REGION.
*         R2 = @UPLOW INPUT REGION.
*
*ON EXIT R1 = @UPPER INPUT REGION.
*        R2 = # OF CHARACTERS IN THE INPUT LINE.
*
TGET     UENTER
* IF DISCONNECT OCCURS, DISCONN FLAG IS SET AND R2=0 ON EXIT
* IF R1=R2 ON ENTRY, ONLY UPPER CASE INPUT IS RETURNED.
*
         LA    R5,PROMPT                 R5 := @PROMPT;
TGET0    BALR  BASER,0                TGET0: BALR(BASER,0);
         USING *,BASER
         LR    R3,R1                     R3 := R1;
         LR    R4,R2                     R4 := R2;
TGET1    MVI   DISCONN,X'00'          TGET1:  RESET(DISCONN);
         MVC   0(16,R4),BLANKCS          MVC(15,B4,BLANKCS);
TGET2    READ  TI,(R4),L:TIME133,(R5) TGET2: READ(TI);
         WAIT  (0)                    TGET2A: WAIT(TI);
         BZ    TGET7                     IF = THEN GOTO TGET7;
         BM    TGET4                     IF < THEN GOTO TGET4;
         BC    15,*(R15)                 BRANCH(ON,SWITCH(R15));
         B     TGET3                     GOTO TGET3;
         CLI   DISCONN,X'FF'             IF ¬DISCONN THEN
         BNE   TGET1A                       GOTO TGET1A;
         UCALL EXIT
TGET1A   MVI   DISCONN,X'FF'             SET(DISCONN);
         SYSQS R1,R2,'-RESPOND IN 5 MINUTES.'
         UCALL TPUT                      TPUT("RESPOND MESSAGE");
         B     TGET2                     GOTO TGET2;
TGET3    LTR   R1,R1                  TGET3: IF R1 ¬= 0 THEN
         BNZ   TGET1                        GOTO TGET1;
         CLI   WILBIN,X'FF'
         BE    TGET3A
         LA    R1,2
         MVC   0(2,R4),=C'/*'
         B     TGET7
TGET3A   LA    R1,3
         MVC   0(3,R4),=C'COL'
         B     TGET7                     GOTO TGET7;
TGET4    LCR   R15,R15                TGET4: R15 := NEG R15;
         BC    15,*(R15)                 BRANCH(ON,SWITCH(R15));
         B     TGET5                     GOTO TGET5; COMMENT I/O ERR;
         SYSQS R1,R2,'-ILLEGAL USE OF TABS.'
         B     TGET6                     GOTO TGET6;
TGET5    SYSQS R1,R2,'-TRANSMISSION ERROR, RETYPE.'
TGET6    UCALL TPUT                   TGET6: TPUT('ERROR MESSAGE');
         B     TGET1                     GOTO TGET1;
* R1 CONTAINS LINE LENGTH
TGET7    LTR   R2,R1                  TGET7: R2 := R1;
         BZ    TGET1                     IF R2 = 0 THEN GOTO TGET1;
         MVI   DISCONN,X'00'             RESET(DISCONN);
         LR    R6,R4                     R6 := R4;
TGET8    CLI   MEM(R6),X'40'          TGET8: CLI(" ",MEM(R6));
         BNE   TGET9                     IF ¬= THEN GOTO TGET9;
         LA    R6,1(,R6)                 R6 := R6 + 1;
         BCT   R2,TGET8                  R2 := R2-1; IF = THEN
         B     TGET1                        GOTO TGET1 ELSE GOTO TGET8;
TGET9    LR    R7,R2                  TGET9: R7 := R2;
         BCTR  R7,0                      REDUCE(R7);
         CR    R4,R6                     IF R4 = R6 THEN
         BE    TGET10                       GOTO TGET10;
         EX    R7,MOVIN1                 EX(R7,MOVIN1);
TGET10   CR    R4,R3                  TGET10: IF R4=R3 THEN
         BE    TGET11                               GOTO TGET11;
         EX    R7,MOVIN2                 EX(R7,MOVIN2);
TGET11   EX    R7,TOUPPER             TGET11: EX(R7,TOUPPER);
         B     TGETX                     GOTO TGETX;
MOVIN1   MVC   MEM(0,R4),MEM(R6)
MOVIN2   MVC   MEM(0,R3),MEM(R4)
TOUPPER  OC    MEM(0,R3),BLANKCS
TIME133  DS    0F
         DC    H'300'
         DC    H'133'
PROMPT   DC    F'3'
         DC    C'-? '
DISCONN  DC    X'00'
TGETX    LR    R1,R3                  TGETX: R1 := R3;
         MVI   ATTNFG,X'00'              RESET(ATTNFG);
         UEXIT *,R2                      UEXIT(*);
*
**TIMER INTERUPT ROUTINE
*
         ENTRY TIMERINT
TIMERINT BALR  BASER,0
         USING *,BASER
         SENSE 15,TSAVE           REQUEST PSW TO CORE
         L     R1,TSAVE+4         GET ADDRESS WE ARE WAITING ON
         CLI   0(R1),X'0A'
         BNZ   TIMERIN1
         AL    R1,=F'2'           SET TO JUMP OVER WAIT
         ST    R1,TSAVE+4         PLACE RETURN POINT IN PSW IMAGE
TIMERIN1 SET   10,TSAVE           RETURN BACK AFTER TIMER FIRE
         EJECT
*
**ATTENTION INTERUPT ROUTINE
*
         ENTRY ATTENINT
ATTENINT BALR  BASER,0
         USING *,BASER
         SENSE 15,TSAVE           REQUEST PSW TO CORE
         MVI   ATTNFG,X'FF'         SET ATTNFG
         SET   10,TSAVE           RETURN BACK AFTER TIMER FIRE
         EJECT
ABORT    UENTER
         AR    R3,R15
         XR    R0,R0
         EX    R0,ABORTMSG(R3)
         LA    R2,LENGTH
         UCALL TPUT
         UCALL EXIT
ABORTMSG LA    R1,=C'ILLEGAL NAME          '
         LA    R1,=C'EXCESS DEVICES        '
         LA    R1,=C'IMPOSSIBLE ERROR      '
         LA    R1,=C'ALREADY IN USE        '
         LA    R1,=C'ALREADY IN USE        '
         LA    R1,=C'ALREADY IN USE        '
         LA    R1,=C'ALREADY IN USE        '
         LA    R1,=C'IMPOSSIBLE ERROR      '
         LA    R1,=C'ACCESS NOT PERMITTED  '
         LA    R1,=C'FILE STORAGE EXCEEDED '
         LA    R1,=C'DIRECTORY FULL        '
         LA    R1,=C'FILE NOT THERE        '
         LA    R1,=C'FILE ALREADY THERE    '
         LA    R1,=C'TABLE OVERFLOW        '
         LA    R1,=C'DISK SPACE EXHAUSTED  '
         LA    R1,=C'NOT ACCESSIBLE        '
         LA    R1,=C'ILLEGAL NAME          '
         LA    R1,=C'ALREADY IN USE        '
         LA    R1,=C'I/O ERROR             '
         LA    R1,=C'IMPOSSIBLE ERROR      '
         LA    R1,=C'ALREADY IN USE        '
         LA    R1,=C'ACCESS NOT PERMITTED  '
         LA    R1,=C'DUPLICATE NAME        '
         LA    R1,=C'DIRECTORY FULL        '
         LA    R1,=C'I/O ERROR             '
         LA    R1,=C'IMPOSSIBLE ERROR      '
         LA    R1,=C'ALREADY IN USE        '
         LA    R1,=C'ACCESS NOT PERMITTED  '
         LA    R1,=C'RECORD ALREADY EXISTS '
         LA    R1,=C'FILE STORAGE EXCEEDED '
         LA    R1,=C'DISK SPACE EXHAUSTED  '
LENGTH   EQU   22
         EJECT
BUMP13   DS    0F
         DC    X'01000040'
*
**HOUSE KEEPING AREA
*
TI       DS    F'0'
FILEDI   DC    F'0'
FILESZ   DC    F'2048'
SAVE1    DC    A(STORAGE)
STACK    DC    A(STORAGE+72)
FILENAME DC    40C' '
WORKORG  DC    A(STORAGE+1024)
WORKEND  DC    F'0'
WILBIN   DC    X'00'
ATTNFG   DC    X'00'
COPFLG   DC    X'00'
LINES    DS    0F
OPCODE   DC    H'303'
MAXLINES DC    H'0'
STARTL   DC    F'0'
ENDL     DC    F'0'
ENDLINE  DC    F'0'
NXTLINE  DC    F'0'
BUFLINE  DC    F'0'
COPBUF   DC    F'0'
COPBGN   DC    F'0'
COPEND   DC    F'0'
COPLIN   DC    F'0'
COPREC   DC    F'0'
CBUF     DS    F
LCPTR    DS    F
CBUFEND  DS    F
LBUF     DS    F
LBPTR    DS    F
LBUFEND  DS    F
INPUT    DS    268C
SAVE     DS    16F
TSAVE    DS    13D
         LTORG
BLANKCS  DC    236X'40'
STORAGE  DS    0D
         END
