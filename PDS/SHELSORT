GLOBAL PROCEDURE SHELSORT( R14 );
COMMENT
"The source code for this computer program is placed in the public
 domain and may be used by any party without notice to the copyright
 holder, Stanford University. Stanford University provides no
 support of any kind to this computer program.  Further:

 STANFORD MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED.
 BY WAY OF EXAMPLE, BUT NOT LIMITATION, STANFORD MAKES NO
 REPRESENTATIONS OR WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY
 PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE WILL NOT INFRINGE
 ANY PATENTS, COPYRIGHTS, TRADEMARKS, OR OTHER RIGHTS. STANFORD SHALL
 NOT BE LIABLE FOR ANY LIABILITY OR DAMAGES WITH RESPECT TO ANY CLAIM
 BY A USER OF THIS COMPUTER PROGRAM OR ANY DERIVATIVES OF THIS
 COMPUTER PROGRAM."
;
BEGIN
    COMMENT        AT ENTRY, R0 - R3 MUST BE SET UP AS BELOW:
    REGISTER USE:
         R0 = N         NUMBER OF ITEMS TO SORT
         R1 = INDEX     BASE ADDRESS OF INDEX ARRAY (1ST ITEM)
         R2 = DISP      LOCATION OF 1ST BYTE OF KEY IN REC (>=1)
         R3 = L         # OF BYTES IN KEY (>=1)
         R4 = X         ADDRESS OF KEY(K)
         R5 = J         MIDDLE LOOP INDEX
         R6 = K         INNER LOOP INDEX
         R7 = KM,KP     K+M, K-M  DEPENDING ON WHETHER FORWARD OR BACKUP
         R8 = M         STEP DISTANCE
         R9 = NM        N-M  # OF STEPS TO TAKE IN J
         R10 = 4        J INCREMENT FOR FAST LOOPS
         R11 = XM       ADDRESS OF KEY(K+M)
         R12 = _4            MASK TO DROP RIGHTMOST 2 BITS
    ALL REGISTERS ARE RETURNED AS SET AT ENTRY;

    INTEGER   REGISTER  N SYN R0,      L SYN R3,      DISP SYN R2,
              X SYN R4, J SYN R5, K SYN R6,  KM SYN R7,    M SYN R8,
              NM SYN R9, VAL4 SYN R10;
    INTEGER   REGISTER  XM SYN R11;
    INTEGER   REGISTER  KP SYN KM;     COMMENT   USED IN BACKUP PHASE;
    INTEGER   REGISTER  MASK SYN R12;
    INTEGER   INDEX SYN B1;

    COMMENT   R15 PROG, R14 RETURN, R13 SAVE AREA;

    STM(R14,R12,B13(12));    COMMENT   SAVE REGS IN CALLER'S AREA;

    M := N SHRA 1 SHLA 2;    COMMENT   DIV BY 2, SCALE BY 4;
    N := N SHLA 2;           COMMENT   SCALE LOOP LIMIT BY 4;
    DISP := DISP - 1S;       COMMENT   ADJUST FOR ADDRESSING USE;
    L := L - 1S;             COMMENT   ADJUST FOR EXECUTE USE;
    VAL4 := 4;               COMMENT   SET UP CONSTANT FOR LOOP STEP;
    MASK := NEG VAL4;        COMMENT   MASK TO DROP RIGHTMOST 2 BITS;

    J := J-J;      COMMENT   NOW ADJUST ADDR TABLE TO POINT TO KEY;
    IF DISP¬=0 THEN WHILE J < N DO
         BEGIN
         X := INDEX(J) + DISP;   INDEX(J) := X;    J := J + VAL4;
         END;

    WHILE M > 0 DO
         BEGIN
         NM := N - M;        COMMENT   SET UPPER LIMIT ON J-LOOP;
         J := J-J;
         WHILE J < NM DO     COMMENT   COUNT FROM 0 TO 4*(N-1) BY 4;
              BEGIN
              K := J;        KM := K + M;
              XM := INDEX(KM);    COMMENT   XM HAS ADDRESS OF KEY(K+M);
              X := INDEX(K);      COMMENT   X GETS ADDRESS OF KEY(K);
              EX( L, CLC( 0, MEM(XM), MEM(X)));
              IF < THEN
                   BEGIN     COMMENT   KEY(XM) TOO SMALL, BACK IT UP;
                   INDEX(KM) := X;     COMMENT   SAVE ONLY LARGE ITEM;
                   KP := K-M;     COMMENT   SET BACKUP POINTER UNDER K;
                   WHILE >= DO
                        BEGIN
                        X := INDEX(KP);
                        EX( L, CLC( 0, MEM(XM), MEM(X) ) );
                        IF >= THEN GOTO FORWARD;
                        INDEX(K) := X;   K := KP;   KP := KP-M;
                        END;
         FORWARD:  INDEX(K) := XM;     COMMENT   SAVE SMALL LAST;
                   END;
              J := J + VAL4;      COMMENT   BUMP LOOP INDEX BY 4;
              END;
         M := M SHRA 1 AND MASK;  COMMENT   DIV BY 2, KEEP SCALE OF *4;
         END;

    J := J-J;      COMMENT   NOW RESTORE INDEX ADDRESSES;
    IF DISP¬=0 THEN WHILE J < N DO
         BEGIN
         X := INDEX(J) - DISP;    INDEX(J) := X;    J := J + VAL4;
         END;

    LM(R14,R12,B13(12));     COMMENT   RESTORE ALL REGS;
END.
